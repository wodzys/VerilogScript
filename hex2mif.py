#! /usr/bin python3
# -*- coding: utf-8 -*-
"""
This script helps to convert hex instructions to Quartus .mif files.

it uses the following format(mif):
:03000000040409EC
:03000100072ECBFC
...
:03002F00032C5748
:00000001FF
"""

# import sys
import os
import datetime
import win32ui
import win32api, win32con


def read(f_in):
    with open(f_in, 'r') as f:
        # 剔除文件中的空行和回车('\n'),返回一个包括所有行数据的 List
        return [l.strip() for l in f if l.strip()]


def check(data):
    # example: ':03000000040409EC'
    # end    : ':00000001FF'
    if data[0][0] != ':':
        print("请检查 HEX 文件每行是否以:开始")
        return
    if data[-1] != ':00000001FF':
        print("请检查 HEX 文件最后一行结束标志")
        return
    width = int(data[0][1:3], 16) * 8
    depth = len(data) - 1
    # print(str(width) + ':' + str(depth))
    return width, depth


def write(f_out, data, width):
    mif_list = []
    wid, dep = check(data)
    mif_list.append('-- Quartus II generated Memory Initialization File (.mif)\n')
    mif_list.append('-- Generated by Python3\n')
    mif_list.append('-- Author: smartbai\n')
    mif_list.append('-- %s\n' % datetime.date.today())
    mif_list.append('\n')
    mif_list.append('WIDTH=%d;\n' % width)
    mif_list.append('DEPTH=%d;\n' % dep)
    mif_list.append('\n')
    mif_list.append('ADDRESS_RADIX=HEX;\n')
    mif_list.append('DATA_RADIX=HEX;\n')
    mif_list.append('\n')
    mif_list.append('CONTENT BEGIN\n')
    # print('wid:' + str(int(wid/4)))
    # print('type:' + str(type(int(wid/4))))
    for l in range(dep):
        mif_list.append('    %s : %s;\n' % (data[l][3:7], data[l][9:9+int(wid/4)]))
    mif_list.append('END;\n')
    # for i in mif_list:
    #     print(i)
    with open(f_out, 'w') as f:
        f.writelines(mif_list)


if __name__ == "__main__":
    WIDTH = 10
    # 提示信息框
    win32api.MessageBox(0, "如果 hex 文件内数据位宽和 mif 文件不同，请先指定位宽", "提醒", win32con.MB_ICONASTERISK)
    # 获取一个PyCFileDialog类的对象，通俗讲就是一个对话框，参数0表示“另存为”对话框，参数1表示“打开文件”对话框
    dlg = win32ui.CreateFileDialog(1, "*.py", None, 0, "Hex Files (*.hex)|*.hex|All files|*.*")
    dlg.SetOFNInitialDir('./')       # 设置打开文件对话框中的初始显示目录
    if dlg.DoModal() == 1:                           # 显示对话框，返回一个整数，这个整数指定对话框的操作
        hex_file_path = dlg.GetPathName()       # 以字符串的形式返回完整的文件名(带路径)
        file_path, hex_file_name = os.path.split(hex_file_path)
        print(file_path + ':::' + hex_file_name)
        file_name, extension = os.path.splitext(hex_file_name)
        print(file_name + ':::' + extension)
        mif_file_path = file_path + '\\' + file_name + '.mif'
        print(mif_file_path)
        write(mif_file_path, read(hex_file_path), WIDTH)
        os.system('code ' + mif_file_path)      # 调用 VSCode 查看生成的 mif 文件
    else:
        print('取消打开文件')

    # hex_file = open(hex_file_path, 'r')
    # print(hex_file.read())
    # if len(sys.argv) < 3:
    #     print ('Usage: hex2mif input.txt output.mif')
    # else:
    #     in_ = sys.argv[1]
    #     out_ = sys.argv[2]
    #     if not out_.endswith('.mif'):
    #         print('Output file must be .mif file')
    #     else:
    #         convert(in_, out_)
    #         print('Converted ' + in_ + ' to ' + out_ + '.')
